# -*- coding: utf-8 -*-
"""Week4excersie_problems.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15ieqP6bBvhiXnhhOytuN4XtMCFt-NLVy

**Week 4 exercise problem: Unique Tuple Frequency (Order Irrespective) and how to get unique elements in nested tuple**
"""

# code to show finding the frequency of unique tuples

# Initializing the list of tuples
tuple_list = [(3, 4), (1, 2), (4, 3), (5, 6)]

# Displaying the original list of tuples
print("The original list is : " + str(tuple_list))

# Using tuple() + list comprehension + sorted() + len() to find unique tuples
# Step 1: Sort each tuple to ignore order
# Step 2: Convert each sorted tuple into a set to remove duplicates
# Step 3: Convert the set back to a list to count the number of unique tuples

# Creating a set to store sorted tuples
sorted_tuple_set = set()

# Iterating through each tuple in the list
for tup in tuple_list:
    # Sorting each tuple and converting it to a tuple again
    sorted_tup = tuple(sorted(tup))
    # Adding the sorted tuple to the set
    sorted_tuple_set.add(sorted_tup)

# Calculating the number of unique tuples
unique_tuple_count = len(sorted_tuple_set)

# Displaying the count of unique tuples
print("Unique tuples Frequency :" + str(unique_tuple_count))

# code to find unique elements in nested tuples
# Using a nested loop

# Initializing the list of nested tuples
nested_tuples = [(3, 4, 5), (4, 5, 7), (1, 4)]

# Displaying the original list of nested tuples
print("The original list : " + str(nested_tuples))

# Using a nested loop and set() to find unique elements
# Step 1: Create an empty list to store unique elements
# Step 2: Create an empty set to track elements that have been seen
# Step 3: Iterate through each tuple in the list
# Step 4: For each element in the tuple, check if it has been seen before
# Step 5: If the element is not in the set, add it to the set and the result list

# List to store unique elements
unique_elements = []

# Set to track seen elements
seen_elements = set()

# Iterating through each tuple in the nested list
for nested in nested_tuples:
    # Iterating through each element in the current tuple
    for item in nested:
        # If the element is not in the seen set, add it to the set and the list
        if item not in seen_elements:
            seen_elements.add(item)
            unique_elements.append(item)

# Displaying the unique elements found in the nested tuples
print("Unique elements in nested tuples are : " + str(unique_elements))